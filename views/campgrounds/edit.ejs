<% layout('layouts/boilerplate')%>
<%- include('../partials/navbar2') %>


<div class="flex flex-col items-center justify-center mt-6 font-serif">
    <h1 class="text-4xl font-bold text-center mb-6">Edit Campground</h1>
    <div class="max-w-xs md:max-w-md w-full bg-white p-6 rounded-lg shadow-md">
        <form action="/campgrounds/<%=campground._id%>?_method=PUT" method="POST" class="space-y-4 validated-form" novalidate enctype="multipart/form-data">
            <div>
                <label class="block text-sm font-medium text-gray-700" for="title">Title</label>
                <input class="w-full text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" type="text" id="title" name="campground[title]" value="<%=campground.title %>" required>
                <p class="hidden text-red-500 text-sm mt-1">Title is required.</p>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700" for="location">Location</label>
                <input class="w-full text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" type="text" id="location" name="campground[location]" value="<%=campground.location %>" required>
                <p class="hidden text-red-500 text-sm mt-1">Location is required.</p>
            </div>
          
            <div>
                <label class="block text-sm font-medium text-gray-700" for="price">Campground Price</label>
                <div class="flex text-black items-center border border-gray-300 rounded-md overflow-hidden">
                    <span class="bg-gray-200 px-3 py-2 text-gray-700 font-serif">$</span>
                    <input type="text" class="w-full p-2 focus:outline-none focus:ring font-serif" id="price" placeholder="0.00" name="campground[price]" value="<%=campground.price %>" required>
                </div>
                <p class="hidden text-red-500 text-sm mt-1">Price is required.</p>
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-700" for="description">Description</label>
                <textarea class="w-full h-20 text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" id="description" name="campground[description]" required><%= campground.description %></textarea>
                <p class="hidden text-red-500 text-sm mt-1">Description is required.</p>
            </div>

            <!-- Image Upload Section  -->
            <div>
                <label class="block text-sm font-medium text-gray-700" for="image">Upload Images</label>
                <div class="mt-1 flex justify-center h-28 px-6 pt-2 pb-6 border-2 border-gray-300 border-dashed rounded-md">
                    <div class="space-y-1 text-center">
                        <i class="fas fa-cloud-upload-alt text-4xl text-gray-400 mx-auto mb-0.5"></i>
                        <div class="flex text-sm text-gray-600 justify-center">
                            <label for="image" class="relative cursor-pointer font-medium text-blue-600 hover:text-blue-500">
                                <span>Upload files</span>
                                <input id="image" name="image" type="file" multiple class="sr-only">
                                <p id="file-chosen" class="text-xs text-gray-500 mt-0.5 text-center">No files selected</p>
                            </label>
                        </div>
                        <p class="text-xs pb-4 text-gray-500">JPEG, JPG, PNG </p>
                    </div>
                </div>
            </div>

            <% if (campground.images && campground.images.length > 0) { %>
                <div class="mt-4">
                    <p class="text-sm font-medium text-gray-700 mb-2">Current Images (Click to delete):</p>
                    <div class="grid grid-cols-3 gap-2" id="image-container">
                        <% campground.images.forEach(function(img, i) { %>
                            <div class="relative group">
                                <img src="<%= img.url %>" alt="Campground image" class="h-24 w-full object-cover rounded-md">
                                <div class="absolute inset-0  flex items-center justify-center rounded-md">
                                    <div class="form-check">
                                        <input type="checkbox" id="image-<%=i%>" name="deleteImages[]" value="<%=img.filename%>" 
                                               class="image-checkbox opacity-0 group-hover:opacity-100 checked:opacity-100 transition-opacity ">
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                    <!-- Delete button (hidden by default) -->
                    <div id="delete-button-container" class="mt-2 hidden">
                        <button type="submit" class="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 text-sm">
                            Delete Selected Images
                        </button>
                    </div>
                </div>
            
            <% } %>

            
            <div>
                <button class="w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600 transition cursor-pointer font-serif">Update Campground</button>
            </div>
        </form>
        <div class="mt-4 text-center">
            <a href="/campgrounds/<%= campground._id %>" class="text-blue-500 hover:underline cursor-pointer font-serif">Back To Campground</a>
        </div>
    </div>
</div>

<script>
    (function () {
        'use strict';

        const form = document.querySelector('.validated-form');
        const inputs = form.querySelectorAll('input[required], textarea[required]');

        form.addEventListener('submit', function (event) {
            let isValid = true;

            inputs.forEach(input => {
                const errorMessage = input.nextElementSibling;

                if (!input.value.trim()) {
                    event.preventDefault();
                    event.stopPropagation();
                    input.classList.add('border-red-500', 'focus:ring-red-500');
                    errorMessage.classList.remove('hidden');
                    isValid = false;
                } else {
                    input.classList.remove('border-red-500', 'focus:ring-red-500');
                    input.classList.add('border-green-500', 'focus:ring-green-500');
                    errorMessage.classList.add('hidden');
                }
            });

            if (!isValid) {
                event.preventDefault();
            }
        });

        inputs.forEach(input => {
            input.addEventListener('input', function () {
                const errorMessage = input.nextElementSibling;
                
                if (input.value.trim()) {
                    input.classList.remove('border-red-500', 'focus:ring-red-500');
                    input.classList.add('border-green-500', 'focus:ring-green-500');
                    errorMessage.classList.add('hidden');
                } else {
                    input.classList.remove('border-green-500', 'focus:ring-green-500');
                    input.classList.add('border-red-500', 'focus:ring-red-500');
                    errorMessage.classList.remove('hidden');
                }
            });
        });

    })();


    const input = document.getElementById('image');
    const fileChosen = document.getElementById('file-chosen');

    input.addEventListener('change', () => {
        const count = input.files.length;
        if (count === 0) {
            fileChosen.textContent = 'No files selected';
        } else {
            fileChosen.textContent = `${count} files selected`;
        }
    });

    // function deleteImage(filename, campgroundId) {
    //     if (confirm('Are you sure you want to delete this image?')) {
    //         fetch(`/campgrounds/${campgroundId}/images/${filename}`, {
    //             method: 'DELETE',
    //             headers: {
    //                 'Content-Type': 'application/json',
    //             },
    //         })
    //         .then(response => {
    //             if (response.ok) {
    //                 window.location.reload();
    //             } else {
    //                 alert('Failed to delete image');
    //             }
    //         })
    //         .catch(error => {
    //             console.error('Error:', error);
    //             alert('An error occurred while deleting the image');
    //         });
    //     }
    // }


    document.addEventListener('DOMContentLoaded', function() {
            const imageContainer = document.getElementById('image-container');
            const deleteButtonContainer = document.getElementById('delete-button-container');
            
            if (imageContainer) {
                imageContainer.addEventListener('change', function(e) {
                    if (e.target.classList.contains('image-checkbox')) {
                        // Check if any checkboxes are checked
                        const checkedBoxes = document.querySelectorAll('.image-checkbox:checked');
                        if (checkedBoxes.length > 0) {
                            deleteButtonContainer.classList.remove('hidden');
                        } else {
                            deleteButtonContainer.classList.add('hidden');
                        }
                    }
                });
            }
        });






  
</script>