<% layout('layouts/boilerplate')%>

<div class="flex flex-col items-center justify-center mt-6 font-serif">
    <h1 class="text-3xl font-bold text-center mb-6">New Campground</h1>
    <div class="max-w-md w-full bg-white p-6 rounded-lg shadow-md">
        <form action="/campgrounds" method="POST" class="space-y-4 validated-form" novalidate>
            <div>
                <label class="block text-sm font-medium text-gray-700" for="title">Title</label>
                <input class="w-full  text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" type="text" id="title" name="campground[title]" required>
                <p class="hidden text-red-500 text-sm mt-1">Title is required.</p>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700" for="location">Location</label>
                <input class="w-full  text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" type="text" id="location" name="campground[location]" required>
                <p class="hidden text-red-500 text-sm mt-1">Location is required.</p>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700" for="image">Image URL</label>
                <input class="w-full  text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" type="text" id="image" name="campground[image]" required>
                <p class="hidden text-red-500 text-sm mt-1">Image URL is required.</p>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700" for="price">Campground Price</label>
                <div class="flex text-black items-center border border-gray-300 rounded-md overflow-hidden">
                    <span class="bg-gray-200 px-3 py-2 text-gray-700 font-serif">$</span>
                    <input type="text" class="w-full p-2 focus:outline-none focus:ring font-serif" id="price" placeholder="0.00" name="campground[price]" required>
                </div>
                <p class="hidden text-red-500 text-sm mt-1">Price is required.</p>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700" for="description">Description</label>
                <textarea class="w-full  text-black p-2 border border-gray-300 rounded-md focus:outline-none focus:ring font-serif" id="description" name="campground[description]" required></textarea>
                <p class="hidden text-red-500 text-sm mt-1">Description is required.</p>
            </div>
            <div>
                <button class="w-full bg-green-500 text-white py-2 rounded-md hover:bg-green-600 transition cursor-pointer font-serif">Add Campground</button>
            </div>
        </form>
        <div class="mt-4 text-center">
            <a href="/campgrounds" class="text-blue-500 hover:underline cursor-pointer font-serif">All Campgrounds</a>
        </div>
    </div>
</div>

<!-- 
<script>
    (function () {
        'use strict';

        const form = document.querySelector('.validated-form');
        const inputs = form.querySelectorAll('input[required], textarea[required]');

        form.addEventListener('submit', function (event) {
            let isValid = true;

            inputs.forEach(input => {
                const errorMessage = input.nextElementSibling;

                if (!input.value.trim()) {
                    event.preventDefault();
                    event.stopPropagation();
                    input.classList.add('border-red-500', 'focus:ring-red-500');
                    errorMessage.classList.remove('hidden');
                    isValid = false;
                } else {
                    input.classList.remove('border-red-500', 'focus:ring-red-500');
                    input.classList.add('border-green-500', 'focus:ring-green-500');
                    errorMessage.classList.add('hidden');
                }
            });

            if (!isValid) {
                event.preventDefault();
            }
        });

        inputs.forEach(input => {
            input.addEventListener('input', function () {
                const errorMessage = input.nextElementSibling;
                
                if (input.value.trim()) {
                    input.classList.remove('border-red-500', 'focus:ring-red-500');
                    input.classList.add('border-green-500', 'focus:ring-green-500');
                    errorMessage.classList.add('hidden');
                } else {
                    input.classList.remove('border-green-500', 'focus:ring-green-500');
                    input.classList.add('border-red-500', 'focus:ring-red-500');
                    errorMessage.classList.remove('hidden');
                }
            });
        });

    })();
</script> -->